@model ERP.Models.Cliente.ClienteModel

@{
    List<ERP.Models.ComboBox.ComboBoxModel> comboModel = new List<ERP.Models.ComboBox.ComboBoxModel>(); 
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Edit</title>
</head>
<body>
    @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "uiForm" }))
    {
        @Html.AntiForgeryToken()
        
    <div class="form-horizontal">
        <h4>Cliente</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.clienteId)

        <div class="form-group">
            @Html.LabelFor(model => model.clave, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.clave, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.clave, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.nombre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.apellidoPaterno, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.apellidoPaterno, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.apellidoPaterno, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.apellidoMaterno, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.apellidoMaterno, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.apellidoMaterno, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.activo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.activo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.activo, "", new { @class = "text-danger" })
            </div>
        </div>
       
        <div class="form-group">
            <p class="control-label col-md-2">Sucursal</p>
            <div class="col-md-10">
                @Html.Action("SucursalComboBox", "ComboBox",new { sucursalId =Model.sucursalId})
            </div>
        </div>

        @Html.HiddenFor(h=>h.sucursalId)
        

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type="button" onclick="submit1();"  class="btn btn-primary" >Save</button>
            </div>
        </div>
    </div>
    }
    
    <div>
        @Html.ActionLink("Back to List", "List")
    </div>
</body>
</html>
<script>
    $(document).ready(function () {
       
       
    });
   
    uiSucursalCmb.SetSelectedIndex(0);
   
    function submit1() {

        var sucursalId = uiSucursalCmb.GetValue() == null ? 0 : uiSucursalCmb.GetValue();
        
        document.getElementById("sucursalId").value = sucursalId;
       
        document.getElementById("uiForm").submit(); 
    }
</script>
