@{
    int _cargoId = Convert.ToInt32(ViewData["CargoId"]);
}

@{
    var grid = Html.DevExpress().GridView(settings =>
    {
        settings.Name = "gvCargoDetallEditWS";
        settings.CallbackRouteValues = new
        {
            Controller = "Cargo",
            Action = "gvCargoDetallEditWSPartial",
            cargoId = _cargoId };

        settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "Cargo", Action = "gvCargoDetallEditWSPartialAddNew",cargoId=_cargoId };
        settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "Cargo", Action = "gvCargoDetallEditWSPartialUpdate", cargoId = _cargoId };
        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "Cargo", Action = "gvCargoDetallEditWSPartialDelete" };
        settings.SettingsEditing.Mode = GridViewEditingMode.EditFormAndDisplayRow;
        settings.SettingsBehavior.ConfirmDelete = true;

        settings.CommandColumn.Visible = true;
        settings.CommandColumn.ShowNewButton = true;
        settings.CommandColumn.ShowDeleteButton = true;
        settings.CommandColumn.ShowEditButton = true;

        settings.KeyFieldName = "cargoDetalleId";

        settings.SettingsPager.Visible = true;
        settings.Settings.ShowGroupPanel = true;
        settings.Settings.ShowFilterRow = true;
        settings.SettingsBehavior.AllowSelectByRowClick = true;

        settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.Off;
        settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
        settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
        settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = false;
        settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 0;
        settings.InitNewRow = (s, e) =>
        {
            e.NewValues["cargoId"] = _cargoId;
            e.NewValues["cargoDetalleId"] = 0;
            e.NewValues["impuestos"] = 0;
            e.NewValues["descuento"] = 0;
            e.NewValues["subTotal"] = 0;
            e.NewValues["saldo"] = 0;
        };

        settings.Columns.Add(c =>
        {
            c.Caption = "ID";
            c.FieldName = "cargoDetalleId";


        });

        settings.Columns.Add(c =>
        {
            c.FieldName = "fechaCargo";
            c.Caption = "Fecha Vencimiento";
            c.PropertiesEdit.DisplayFormatString = "dd/MM/yyyy";
            c.EditorProperties().DateEdit(p =>

            {

                //p.AllowUserInput = true;

                p.TimeSectionProperties.Visible = true;

                //p.TimeSectionProperties.Adaptive = true;

                p.TimeSectionProperties.TimeEditProperties.EditFormat = EditFormat.DateTime;

                p.TimeSectionProperties.TimeEditProperties.EditFormatString = "dd/MM/yyyy";



            });
        });
        settings.Columns.Add(c=> {
            c.Caption = "Subtotal";
            c.FieldName = "subTotal";
            c.ReadOnly = true;

            c.EditorProperties().SpinEdit(e =>
            {
                e.ValidationSettings.RequiredField.IsRequired = false;
                e.DisplayFormatString = "c";
            });

        });
        settings.Columns.Add(c =>
        {
            c.Caption = "Impuestos";
            c.FieldName = "impuestos";
            c.ReadOnly = true;
            c.EditorProperties().SpinEdit(e =>
            {
                e.ValidationSettings.RequiredField.IsRequired = false;
                e.DisplayFormatString = "c";

            }
                );
        });
        settings.Columns.Add(c =>
        {
            c.Caption = "Total";
            c.FieldName = "total";
            c.EditorProperties().SpinEdit(e =>
            {
                e.ValidationSettings.RequiredField.IsRequired = true;
                e.DisplayFormatString = "c";
            });
            c.ReadOnly = false;
        });
        settings.Columns.Add(c =>
        {
            c.Caption = "Descuento";
            c.FieldName = "descuento";
            c.EditorProperties().SpinEdit(e =>
            {
                e.ValidationSettings.RequiredField.IsRequired = true;
                e.DisplayFormatString = "c";
            });
            c.ReadOnly = false;
        });
        settings.Columns.Add(c =>
        {
            c.Caption = "Saldo";
            c.FieldName = "saldo";

            c.EditorProperties().SpinEdit(e =>
            {
                e.ValidationSettings.RequiredField.IsRequired = false;
                e.DisplayFormatString = "c";

            });

            c.ReadOnly = true;
        });
        settings.TotalSummary.Add(DevExpress.Data.SummaryItemType.Sum, "saldo").DisplayFormat = "c";
        settings.TotalSummary.Add(DevExpress.Data.SummaryItemType.Sum, "total").DisplayFormat = "c";
        settings.Settings.ShowFooter = true;
    });
    if (ViewData["EditError"] != null){
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}
@grid.Bind(Model).GetHtml()